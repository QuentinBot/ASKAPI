{
  "openapi": "3.1.0",
  "info": {
    "title": "ðŸ¥¥ ORKG-Ask API",
    "version": "1.8.1"
  },
  "servers": [
    {
      "url": "https://api.ask.orkg.org"
    }
  ],
  "paths": {
    "/llm/extract/item/values": {
      "get": {
        "tags": [
          "Large Language Models"
        ],
        "summary": "Extract Item Values",
        "description": "Extracts the properties with their corresponding values from the given item.",
        "operationId": "extract_item_values_llm_extract_item_values_get",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The properties to extract from the item",
              "title": "Properties"
            },
            "description": "The properties to extract from the item"
          },
          {
            "name": "item_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The item ID to extract the values from",
              "title": "Item Id"
            },
            "description": "The item ID to extract the values from"
          },
          {
            "name": "collection_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The custom collection item ID to extract the values from",
              "title": "Collection Item Id"
            },
            "description": "The custom collection item ID to extract the values from"
          },
          {
            "name": "invalidate_cache",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to invalidate the cache for the item",
              "default": false,
              "title": "Invalidate Cache"
            },
            "description": "Whether to invalidate the cache for the item"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractItemValuesFromPropertiesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/llm/synthesize/items/abstracts": {
      "get": {
        "tags": [
          "Large Language Models"
        ],
        "summary": "Synthesize Abstracts For Question",
        "description": "Synthesizes a citable answer for a given research question from the abstracts of the given items.",
        "operationId": "synthesize_abstracts_for_question_llm_synthesize_items_abstracts_get",
        "parameters": [
          {
            "name": "question",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The question to synthesize the abstracts for",
              "title": "Question"
            },
            "description": "The question to synthesize the abstracts for"
          },
          {
            "name": "item_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "The item ID to use during synthesis",
              "title": "Item Ids"
            },
            "description": "The item ID to use during synthesis"
          },
          {
            "name": "collection_item_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The custom collection item IDs to use during synthesis",
              "title": "Collection Item Ids"
            },
            "description": "The custom collection item IDs to use during synthesis"
          },
          {
            "name": "invalidate_cache",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to invalidate the cache for the item",
              "default": false,
              "title": "Invalidate Cache"
            },
            "description": "Whether to invalidate the cache for the item"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynthesisAnswerOfQuestionFromAbstractsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/index/search": {
      "get": {
        "tags": [
          "Semantic Neural Search"
        ],
        "summary": "Semantic Search",
        "description": "Searches for similar documents using ANN",
        "operationId": "semantic_search_index_search_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The text to search for",
              "title": "Query"
            },
            "description": "The text to search for"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "description": "The maximum number of documents to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of documents to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "The offset to start fetching documents from",
              "title": "Offset"
            },
            "description": "The offset to start fetching documents from"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The criteria to filter the search results",
              "title": "Filter"
            },
            "description": "The criteria to filter the search results",
            "examples": {
              "year equal to": {
                "summary": "year equal to a specific value",
                "description": "The `year` field equal to a specific value here `2023`",
                "value": "year = 2023"
              },
              "year greater than": {
                "summary": "year greater than a specific value",
                "description": "The `year` field greater than a specific value here `2013`",
                "value": "year > 2013"
              },
              "citations in range": {
                "summary": "citations in a specific range",
                "description": "The `citations` field in a specific range here `10` to `100`",
                "value": "citations > 10, <=100"
              },
              "title like": {
                "summary": "title like a specific value",
                "description": "The `title` field like a specific value here `machine learning`.\n         This will use full text search index to find the documents.",
                "value": "title LIKE \"machine learning\""
              },
              "language in list": {
                "summary": "language in a specific list",
                "description": "The `language` field in a specific list here `en` or `fr`",
                "value": "language IN [\"en\", \"fr\"]"
              },
              "full text is null": {
                "summary": "full text is null",
                "description": "The `full_text` field is null",
                "value": "IS_NULL(full_text)"
              },
              "complex filter": {
                "summary": "complex filter",
                "description": "A complex filter with multiple fields.\n         You can use `AND`, `OR` and `NOT` operators to combine the filters.\n          Here `year` not equal to `2013` and `issbn` not in a specific list and `title` like a specific value",
                "value": "(year != 2013 OR issbn NOT IN [\"1231313\", \"1231355444\"]) AND title LIKE \"machine learning\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QdrantPagedDocumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/index/get/{document_id}": {
      "get": {
        "tags": [
          "Semantic Neural Search"
        ],
        "summary": "Retrieve Document",
        "description": "Get a single document from the vector store via its ID",
        "operationId": "retrieve_document_index_get__document_id__get",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QdrantSingleDocumentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/index/explore": {
      "get": {
        "tags": [
          "Semantic Neural Search"
        ],
        "summary": "Explore Documents",
        "description": "Explore documents from the vector store using filters",
        "operationId": "explore_documents_index_explore_get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The criteria to filter the search results",
              "title": "Filter"
            },
            "description": "The criteria to filter the search results",
            "examples": {
              "year equal to": {
                "summary": "year equal to a specific value",
                "description": "The `year` field equal to a specific value here `2023`",
                "value": "year = 2023"
              },
              "year greater than": {
                "summary": "year greater than a specific value",
                "description": "The `year` field greater than a specific value here `2013`",
                "value": "year > 2013"
              },
              "citations in range": {
                "summary": "citations in a specific range",
                "description": "The `citations` field in a specific range here `10` to `100`",
                "value": "citations > 10, <=100"
              },
              "title like": {
                "summary": "title like a specific value",
                "description": "The `title` field like a specific value here `machine learning`.\n         This will use full text search index to find the documents.",
                "value": "title LIKE \"machine learning\""
              },
              "language in list": {
                "summary": "language in a specific list",
                "description": "The `language` field in a specific list here `en` or `fr`",
                "value": "language IN [\"en\", \"fr\"]"
              },
              "full text is null": {
                "summary": "full text is null",
                "description": "The `full_text` field is null",
                "value": "IS_NULL(full_text)"
              },
              "complex filter": {
                "summary": "complex filter",
                "description": "A complex filter with multiple fields.\n         You can use `AND`, `OR` and `NOT` operators to combine the filters.\n          Here `year` not equal to `2013` and `issbn` not in a specific list and `title` like a specific value",
                "value": "(year != 2013 OR issbn NOT IN [\"1231313\", \"1231355444\"]) AND title LIKE \"machine learning\""
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "description": "The maximum number of documents to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of documents to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The offset to start fetching documents from",
              "title": "Offset"
            },
            "description": "The offset to start fetching documents from"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The payload field to order by",
              "title": "Order By"
            },
            "description": "The payload field to order by"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QdrantPagedDocumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/index/recommend": {
      "get": {
        "tags": [
          "Semantic Neural Search"
        ],
        "summary": "Recommend Documents",
        "description": "Searches for similar documents using an ANN index",
        "operationId": "recommend_documents_index_recommend_get",
        "parameters": [
          {
            "name": "document_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The document IDs to be used for recommendations",
              "title": "Document Ids"
            },
            "description": "The document IDs to be used for recommendations"
          },
          {
            "name": "avoid_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }, 
              "description": "The document IDs to be avoided for recommendations",
              "title": "Avoid Ids"
            },
            "description": "The document IDs to be avoided for recommendations"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "description": "The maximum number of documents to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of documents to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "The offset to start fetching documents from",
              "title": "Offset"
            },
            "description": "The offset to start fetching documents from"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The criteria to filter the search results",
              "title": "Filter"
            },
            "description": "The criteria to filter the search results",
            "examples": {
              "year equal to": {
                "summary": "year equal to a specific value",
                "description": "The `year` field equal to a specific value here `2023`",
                "value": "year = 2023"
              },
              "year greater than": {
                "summary": "year greater than a specific value",
                "description": "The `year` field greater than a specific value here `2013`",
                "value": "year > 2013"
              },
              "citations in range": {
                "summary": "citations in a specific range",
                "description": "The `citations` field in a specific range here `10` to `100`",
                "value": "citations > 10, <=100"
              },
              "title like": {
                "summary": "title like a specific value",
                "description": "The `title` field like a specific value here `machine learning`.\n         This will use full text search index to find the documents.",
                "value": "title LIKE \"machine learning\""
              },
              "language in list": {
                "summary": "language in a specific list",
                "description": "The `language` field in a specific list here `en` or `fr`",
                "value": "language IN [\"en\", \"fr\"]"
              },
              "full text is null": {
                "summary": "full text is null",
                "description": "The `full_text` field is null",
                "value": "IS_NULL(full_text)"
              },
              "complex filter": {
                "summary": "complex filter",
                "description": "A complex filter with multiple fields.\n         You can use `AND`, `OR` and `NOT` operators to combine the filters.\n          Here `year` not equal to `2013` and `issbn` not in a specific list and `title` like a specific value",
                "value": "(year != 2013 OR issbn NOT IN [\"1231313\", \"1231355444\"]) AND title LIKE \"machine learning\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QdrantListDocumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/index/count": {
      "get": {
        "tags": [
          "Semantic Neural Search"
        ],
        "summary": "Count Documents",
        "description": "Count documents from the vector store using regular filters",
        "operationId": "count_documents_index_count_get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The criteria to filter the search results",
              "title": "Filter"
            },
            "description": "The criteria to filter the search results",
            "examples": {
              "year equal to": {
                "summary": "year equal to a specific value",
                "description": "The `year` field equal to a specific value here `2023`",
                "value": "year = 2023"
              },
              "year greater than": {
                "summary": "year greater than a specific value",
                "description": "The `year` field greater than a specific value here `2013`",
                "value": "year > 2013"
              },
              "citations in range": {
                "summary": "citations in a specific range",
                "description": "The `citations` field in a specific range here `10` to `100`",
                "value": "citations > 10, <=100"
              },
              "title like": {
                "summary": "title like a specific value",
                "description": "The `title` field like a specific value here `machine learning`.\n         This will use full text search index to find the documents.",
                "value": "title LIKE \"machine learning\""
              },
              "language in list": {
                "summary": "language in a specific list",
                "description": "The `language` field in a specific list here `en` or `fr`",
                "value": "language IN [\"en\", \"fr\"]"
              },
              "full text is null": {
                "summary": "full text is null",
                "description": "The `full_text` field is null",
                "value": "IS_NULL(full_text)"
              },
              "complex filter": {
                "summary": "complex filter",
                "description": "A complex filter with multiple fields.\n         You can use `AND`, `OR` and `NOT` operators to combine the filters.\n          Here `year` not equal to `2013` and `issbn` not in a specific list and `title` like a specific value",
                "value": "(year != 2013 OR issbn NOT IN [\"1231313\", \"1231355444\"]) AND title LIKE \"machine learning\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QdrantDictResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/index/info": {
      "get": {
        "tags": [
          "Semantic Neural Search"
        ],
        "summary": "Get Indices Info",
        "description": "Get information about the available indices.",
        "operationId": "get_indices_info_index_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QdrantDictResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "SynthesisAnswerOfQuestionFromAbstractsResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "payload": {
            "$ref": "#/components/schemas/app__models__llm__SynthesisAnswerOfQuestionFromAbstractsResponse__Payload"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "timestamp",
          "payload"
        ],
        "title": "SynthesisAnswerOfQuestionFromAbstractsResponse"
      },
      "ExtractItemValuesFromPropertiesResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "payload": {
            "$ref": "#/components/schemas/app__models__llm__ExtractItemValuesFromPropertiesResponse__Payload"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "timestamp",
          "payload"
        ],
        "title": "ExtractItemValuesFromPropertiesResponse"
      },
      "QdrantPagedDocumentsResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "payload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QdrantPageResponse"
              }
            ],
            "description": "The page of documents that match the search"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "timestamp",
          "payload"
        ],
        "title": "QdrantPagedDocumentsResponse"
      },
      "QdrantPageResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/QdrantDocument"
            },
            "type": "array",
            "title": "Items",
            "description": "The list of items retrieved from Qdrant"
          },
          "total_hits": {
            "type": "integer",
            "title": "Total Hits",
            "description": "The total number of documents that can be retrieved from Qdrant"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more documents to be retrieved from Qdrant"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset",
            "description": "The offset to start fetching documents from, could be int, str, or UUID"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total_hits",
          "has_more"
        ],
        "title": "QdrantPageResponse"
      },
      "QdrantDictResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "payload": {
            "type": "object",
            "title": "Payload",
            "description": "The payload of the response"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "timestamp",
          "payload"
        ],
        "title": "QdrantDictResponse"
      },
      "QdrantDocument": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Id",
            "description": "The document ID, here is the coreID"
          },
          "doi": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doi",
            "description": "The DOI of the document"
          },
          "oai": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oai",
            "description": "The OAI of the document"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "The title of the document"
          },
          "date_published": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Published",
            "description": "The date published of the document"
          },
          "abstract": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Abstract",
            "description": "The abstract of the document"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year",
            "description": "The year of the document"
          },
          "issn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issn",
            "description": "The ISSN of the document"
          },
          "full_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Text",
            "description": "The full text of the document"
          },
          "subjects": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subjects",
            "description": "A list of subjects of the document"
          },
          "urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls",
            "description": "A list of URLs of the document"
          },
          "identifiers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifiers",
            "description": "A list of identifiers of the document"
          },
          "topics": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topics",
            "description": "A list of topics of the document"
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url",
            "description": "The download URL of the document"
          },
          "full_text_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Text Identifier",
            "description": "The full text identifier of the document"
          },
          "pdf_hash_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Hash Value",
            "description": "The PDF hash value of the document"
          },
          "raw_record_xml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Record Xml",
            "description": "The raw record XML of the document"
          },
          "journals": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Journals",
            "description": "A list of journals of the document"
          },
          "authors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authors",
            "description": "A list of authors of the document"
          },
          "publisher": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher",
            "description": "The publisher of the document"
          },
          "relations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relations",
            "description": "A list of relations of the document"
          },
          "contributors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contributors",
            "description": "A list of contributors of the document"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the document"
          },
          "citation_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Citation Count",
            "description": "The citation count of the document"
          },
          "document_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Type",
            "description": "The inferred document type"
          },
          "extractions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extractions",
            "description": "The automatic extractions from the item"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "title": "QdrantDocument"
      },
      "QdrantListDocumentsResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "payload": {
            "items": {
              "$ref": "#/components/schemas/QdrantDocument"
            },
            "type": "array",
            "title": "Payload",
            "description": "The list of documents that match the search"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "timestamp",
          "payload"
        ],
        "title": "QdrantListDocumentsResponse"
      },
      "QdrantSingleDocumentResponse": {
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Uuid"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "payload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QdrantDocument"
              }
            ],
            "description": "The item that matches the selection criteria"
          }
        },
        "type": "object",
        "required": [
          "uuid",
          "timestamp",
          "payload"
        ],
        "title": "QdrantSingleDocumentResponse"
      },
      "app__models__llm__ExtractItemValuesFromPropertiesResponse__Payload": {
        "properties": {
          "item_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Item Id",
            "description": "The ID of the item to extract properties from"
          },
          "properties": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Properties",
            "description": "The properties to extract from the item"
          },
          "values": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {},
                  "type": "array"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "number"
                }
              ]
            },
            "type": "object",
            "title": "Values",
            "description": "The extracted values for the properties"
          },
          "extra": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {},
                  "type": "array"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "number"
                }
              ]
            },
            "type": "object",
            "title": "Extra",
            "description": "Extra values detected by the LLM"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "properties",
          "values",
          "extra"
        ],
        "title": "Payload"
      },
      "app__models__llm__SynthesisAnswerOfQuestionFromAbstractsResponse__Payload": {
        "properties": {
          "items_mapping": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "object",
            "title": "Items Mapping",
            "description": "The item IDs mappings to the citations"
          },
          "collection_items_mapping": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "object",
            "title": "Collection Items Mapping",
            "description": "The collection item IDs mappings to the citations"
          },
          "question": {
            "type": "string",
            "title": "Question",
            "description": "The question to synthesize the answer for"
          },
          "synthesis": {
            "type": "string",
            "title": "Synthesis",
            "description": "The synthesized answer for the question"
          }
        },
        "type": "object",
        "required": [
          "items_mapping",
          "collection_items_mapping",
          "question",
          "synthesis"
        ],
        "title": "Payload"
      }
    }
  }
}